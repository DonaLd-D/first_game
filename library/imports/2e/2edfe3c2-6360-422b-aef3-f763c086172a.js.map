{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","repeatForever","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        jumpHeight:0,\r\n        jumpDuration:0,\r\n        maxMoveSpeed:0,\r\n        accel:0,\r\n    },\r\n\r\n    runJumpAction () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.tween().by(this.jumpDuration, {y: this.jumpHeight}, {easing: 'sineOut'});\r\n        // 下落\r\n        var jumpDown = cc.tween().by(this.jumpDuration, {y: -this.jumpHeight}, {easing: 'sineIn'});\r\n\r\n        // 创建一个缓动，按 jumpUp、jumpDown 的顺序执行动作\r\n        var tween = cc.tween().sequence(jumpUp, jumpDown)\r\n        // 不断重复\r\n        return cc.tween().repeatForever(tween);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onLoad: function () {\r\n        var jumpAction = this.runJumpAction();\r\n        cc.tween(this.node).then(jumpAction).start();\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this); \r\n    },\r\n\r\n    onDestroy () {\r\n        // 取消键盘输入监听\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        }\r\n        else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        // 限制主角的速度不能超过最大值\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n    \r\n});\r\n"]}